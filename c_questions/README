These are a few small c examples answering questions about the language,
architecture or standard libraries. Or just offering a small snippet of code
solving a trivial task.

They are sometimes pretty old and usually not the best code to reuse in a real
world program.

Contents:
absolute_timer.c - Clock programs are annoying, they either wake up to update the display like every second (even when only minutes are shown, draining the battery) or keep stale for far too long. Sure there is a way to reliably wake up on the strike of a new minute/hour and only then.
addrinfo.c - I want something like "host", but that handles everything like /etc/hosts, mdns,... (getent hosts is still better)
bind.c - Don't forget you can let the OS to pick a port for you to listen on by specifying port 0, this is how you organise it
minus.c - I want to compute the absolute value of a number, and you tell me not to use "if (i<0) i=-i;", but why? Let's see it break on INT_MIN...
mmap.c - I want to see how mmap works, especially MAP_FIXED, does it really replace any memory at the address? (spoilers: it does, use MAP_FIXED_NOREPLACE)
negindex.c - does negative indeging in an array work?
or.c - does the "||" operator return just "1" for true or the first non-zero argument?
pointer.c - do pointers behave differently in "if (ptr)" vs. "if (ptr != NULL)"?
printf.c - how do I print a char* with length info efficiently? How about left padding it?
reread.c - how do I read a file again and again without launching unnecessary processes (e.g. query remaining entropy from /proc/sys/kernel/random/entropy_avail)
sscanf-%n.c - I do not know the length of the input string, how do I read it? How do I know how long the string was?
static/ - How does the "static" work? Also, how can I automatically generate dependencies on headers and the like?
string_macros/ - How do I pass a define that I can use as a string?
strlenof.c - a macro computing length of a string literal at compile time.
